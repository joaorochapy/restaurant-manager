# Generated by Django 4.0.4 on 2022-06-01 00:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=55, verbose_name='Nome')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('order', models.IntegerField(blank=True, default=0, verbose_name='Ordem')),
            ],
            options={
                'ordering': ('order', 'name'),
            },
        ),
        migrations.CreateModel(
            name='MenuItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=100, verbose_name='Item')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Preço')),
                ('active', models.BooleanField(default=True, verbose_name='Ativo?')),
                ('need_to_prepare', models.BooleanField(default=True, verbose_name='Necessita de preparo?')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='restaurant.category', verbose_name='Categoria')),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(max_length=3, unique=True, verbose_name='Número')),
                ('slug', models.SlugField(blank=True, max_length=8, unique=True, verbose_name='Slug')),
            ],
        ),
        migrations.CreateModel(
            name='WaiterOrderPad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(blank=True, max_length=8, unique=True, verbose_name='Código')),
                ('openning', models.DateTimeField(auto_now_add=True, verbose_name='Abertura')),
                ('closure', models.DateTimeField(blank=True, null=True, verbose_name='Fechamento')),
                ('status', models.CharField(choices=[('opennig', 'Abertura'), ('closure', 'Fechamento')], default='aberta', max_length=7, verbose_name='Status')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=12, verbose_name='Valor total')),
                ('table', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='restaurant.table', verbose_name='Mesa')),
            ],
        ),
        migrations.CreateModel(
            name='OrderedItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Preço')),
                ('status', models.CharField(choices=[('prepare', 'Em preparo'), ('ready', 'Pronto'), ('delivered', 'Entregue')], default='preparo', max_length=10, verbose_name='Status')),
                ('note', models.TextField(blank=True, verbose_name='Nota')),
                ('order_time', models.DateTimeField(auto_now_add=True, verbose_name='Hora do pedido')),
                ('delivery_time', models.DateTimeField(blank=True, null=True, verbose_name='Hora da entrega')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='restaurant.menuitem', verbose_name='Item')),
                ('waiter_order_pad', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='restaurant.waiterorderpad')),
            ],
            options={
                'ordering': ('order_time', 'item'),
            },
        ),
    ]
